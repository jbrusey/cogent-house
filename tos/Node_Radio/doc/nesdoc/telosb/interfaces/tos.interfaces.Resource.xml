<?xml version="1.0" ?><interfacedef loc="77:/opt/tinyos-main-read-only/tos/interfaces/Resource.nc" nicename="tos.interfaces.Resource" qname="Resource">
      <documentation loc="63:/opt/tinyos-main-read-only/tos/interfaces/Resource.nc">
        <short>
 Please refer to TEP 108 for more information about this interface and its
 intended use.&lt;br&gt;&lt;br&gt;

 The Resource interface can be used to gain access to
 shared resources.</short>
        <long>
 Please refer to TEP 108 for more information about this interface and its
 intended use.&lt;br&gt;&lt;br&gt;

 The Resource interface can be used to gain access to
 shared resources.  It is always offered as a parameterized
 interface, and its users gain access to the resource through some
 predefined arbitration policy.

 @author Kevin Klues (klueska@cs.wustl.edu)
 @version $Revision: 1.6 $
 @date $Date: 2010-06-29 22:07:46 $
</long>
      </documentation>
      <function command="" loc="120:/opt/tinyos-main-read-only/tos/interfaces/Resource.nc" name="release" provided="0" ref="0x2b09176c4b40">
        <documentation loc="104:/opt/tinyos-main-read-only/tos/interfaces/Resource.nc">
          <short>
 Release a shared resource you previously acquired.</short>
          <long>
 Release a shared resource you previously acquired.  

 @return SUCCESS The resource has been released &lt;br&gt;
         FAIL You tried to release but you are not the
              owner of the resource 

 @note This command should never be called between putting in a request 	  
       and waiting for a granted event.  Doing so will result in a
       potential race condition.  There are ways to guarantee that no
       race will occur, but they are clumsy and overly complicated.
       Since it doesn't logically make since to be calling
       &lt;code&gt;release&lt;/code&gt; before receiving a &lt;code&gt;granted&lt;/code&gt; event, 
       we have opted to keep thing simple and warn you about the potential 
       race.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Resource" qname="Resource"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2b0916a571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="97:/opt/tinyos-main-read-only/tos/interfaces/Resource.nc" name="immediateRequest" provided="0" ref="0x2b09176c6c18">
        <documentation loc="90:/opt/tinyos-main-read-only/tos/interfaces/Resource.nc">
          <short>
 Request immediate access to a shared resource.</short>
          <long>
 Request immediate access to a shared resource. You must call release()
 when you are done with it.

 @return SUCCESS When a request has been accepted. &lt;br&gt;
            FAIL The request cannot be fulfilled
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Resource" qname="Resource"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2b0916a571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="88:/opt/tinyos-main-read-only/tos/interfaces/Resource.nc" name="request" provided="0" ref="0x2b09176c6328">
        <documentation loc="78:/opt/tinyos-main-read-only/tos/interfaces/Resource.nc">
          <short>
 Request access to a shared resource.</short>
          <long>
 Request access to a shared resource. You must call release()
 when you are done with it.

 @return SUCCESS When a request has been accepted. The granted()
                 event will be signaled once you have control of the
                 resource.&lt;br&gt;
         EBUSY You have already requested this resource and a
               granted event is pending
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Resource" qname="Resource"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2b0916a571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" loc="102:/opt/tinyos-main-read-only/tos/interfaces/Resource.nc" name="granted" provided="0" ref="0x2b09176c43e0">
        <documentation loc="99:/opt/tinyos-main-read-only/tos/interfaces/Resource.nc">
          <short>
 You are now in control of the resource.</short>
          <long>
 You are now in control of the resource.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Resource" qname="Resource"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="128:/opt/tinyos-main-read-only/tos/interfaces/Resource.nc" name="isOwner" provided="0" ref="0x2b0917701580">
        <documentation loc="122:/opt/tinyos-main-read-only/tos/interfaces/Resource.nc">
          <short>
  Check if the user of this interface is the current
  owner of the Resource
  </short>
          <long>
  Check if the user of this interface is the current
  owner of the Resource
  @return TRUE  It is the owner &lt;br&gt;
             FALSE It is not the owner
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Resource" qname="Resource"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="bool" ref="0x2b0916a4ac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>