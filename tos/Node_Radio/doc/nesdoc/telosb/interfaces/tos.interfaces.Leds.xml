<?xml version="1.0" ?><interfacedef loc="51:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" nicename="tos.interfaces.Leds" qname="Leds">
      <documentation loc="33:/opt/tinyos-main-read-only/tos/types/Leds.h">
        <short>
 Constants for manipulating LEDs.</short>
        <long>
 Constants for manipulating LEDs.

 @author Philip Levis
 @date   March 21, 2005
</long>
      </documentation>
      <function command="" loc="61:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" name="led0Off" provided="0" ref="0x2b09170c2738">
        <documentation loc="58:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc">
          <short>
 Turn off LED 0.</short>
          <long>
 Turn off LED 0. The color of this LED depends on the platform.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="67:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" name="led0Toggle" provided="0" ref="0x2b09170c2e70">
        <documentation loc="63:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc">
          <short>
 Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>
 Toggle LED 0; if it was off, turn it on, if was on, turn it off.
 The color of this LED depends on the platform.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="72:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" name="led1On" provided="0" ref="0x2b09170c0608">
        <documentation loc="69:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc">
          <short>
 Turn on LED 1.</short>
          <long>
 Turn on LED 1. The color of this LED depends on the platform.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="83:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" name="led1Toggle" provided="0" ref="0x2b09170bf480">
        <documentation loc="79:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc">
          <short>
 Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>
 Toggle LED 1; if it was off, turn it on, if was on, turn it off.
 The color of this LED depends on the platform.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="100:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" name="led2Toggle" provided="0" ref="0x2b09170bea98">
        <documentation loc="96:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc">
          <short>
 Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>
 Toggle LED 2; if it was off, turn it on, if was on, turn it off.
 The color of this LED depends on the platform.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="117:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" name="get" provided="0" ref="0x2b09170bd258">
        <documentation loc="103:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc">
          <short>
 Get the current LED settings as a bitmask.</short>
          <long>
 Get the current LED settings as a bitmask. Each bit corresponds to
 whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can
 also use the enums LEDS_LED0, LEDS_LED1. For example, this expression
 will determine whether LED 2 is on:

 &lt;pre&gt; (call Leds.get() &amp; LEDS_LED2) &lt;/pre&gt;

 This command supports up to 8 LEDs; if a platform has fewer, then
 those LEDs should always be off (their bit is zero). Also see
 &lt;tt&gt;set()&lt;/tt&gt;.

 @return a bitmask describing which LEDs are on and which are off
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="uint8_t" ref="0x2b091611a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="77:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" name="led1Off" provided="0" ref="0x2b09170c0d20">
        <documentation loc="74:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc">
          <short>
 Turn off LED 1.</short>
          <long>
 Turn off LED 1. The color of this LED depends on the platform.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="134:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" name="set" provided="0" ref="0x2b09170bdd58">
        <documentation loc="120:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc">
          <short>
 Set the current LED configuration using a bitmask.</short>
          <long>
 Set the current LED configuration using a bitmask.  Each bit
 corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED
 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,
 this statement will configure the LEDs so LED 0 and LED 2 are on:

 &lt;pre&gt; call Leds.set(LEDS_LED0 | LEDS_LED2); &lt;/pre&gt;

 This statement will turn LED 1 on if it was not already:

 &lt;pre&gt;call Leds.set(call Leds.get() | LEDS_LED1);&lt;/pre&gt;

 @param  val   a bitmask describing the on/off settings of the LEDs
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b091611a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="134:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" name="val" ref="0x2b09170bdae8">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b091611a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="56:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" name="led0On" provided="0" ref="0x2b09170c2020">
        <documentation loc="53:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc">
          <short>
 Turn on LED 0.</short>
          <long>
 Turn on LED 0. The color of this LED depends on the platform.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="89:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" name="led2On" provided="0" ref="0x2b09170bfbf0">
        <documentation loc="86:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc">
          <short>
 Turn on LED 2.</short>
          <long>
 Turn on LED 2. The color of this LED depends on the platform.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="94:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc" name="led2Off" provided="0" ref="0x2b09170be360">
        <documentation loc="91:/opt/tinyos-main-read-only/tos/interfaces/Leds.nc">
          <short>
 Turn off LED 2.</short>
          <long>
 Turn off LED 2. The color of this LED depends on the platform.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>