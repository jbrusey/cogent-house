<?xml version="1.0" ?><interfacedef loc="47:/opt/tinyos-main-read-only/tos/chips/cc2420/interfaces/CC2420Register.nc" nicename="tos.chips.cc2420.interfaces.CC2420Register" qname="CC2420Register">
      <documentation loc="33:/opt/tinyos-main-read-only/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>
 Interface representing one of the Read/Write registers on the
 CC2420 radio.</short>
        <long>
 Interface representing one of the Read/Write registers on the
 CC2420 radio. The return values (when appropriate) refer to the
 status byte returned on the CC2420 SO pin. A full list of RW
 registers can be found on page 61 of the CC2420 datasheet (rev
 1.2). Page 25 of the same document describes the protocol for
 interacting with these registers over the CC2420 SPI bus.

 @author Philip Levis
 @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $
</long>
      </documentation>
      <function command="" loc="55:/opt/tinyos-main-read-only/tos/chips/cc2420/interfaces/CC2420Register.nc" name="read" provided="0" ref="0x2b091778b290">
        <documentation loc="49:/opt/tinyos-main-read-only/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>
 Read a 16-bit data word from the register.</short>
          <long>
 Read a 16-bit data word from the register.

 @param data pointer to place the register value.
 @return status byte from the read.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.cc2420.interfaces.CC2420Register" qname="CC2420Register"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b09170e8b40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer alignment="I:2" size="I:2">
              <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
                <typename><typedef-ref name="uint16_t" ref="0x2b091611ab20"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="55:/opt/tinyos-main-read-only/tos/chips/cc2420/interfaces/CC2420Register.nc" name="data" ref="0x2b091778b020">
            <type-pointer alignment="I:2" size="I:2">
              <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
                <typename><typedef-ref name="uint16_t" ref="0x2b091611ab20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" loc="63:/opt/tinyos-main-read-only/tos/chips/cc2420/interfaces/CC2420Register.nc" name="write" provided="0" ref="0x2b091778bce8">
        <documentation loc="57:/opt/tinyos-main-read-only/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>
 Write a 16-bit data word to the register.</short>
          <long>
 Write a 16-bit data word to the register.
 
 @param data value to write to register.
 @return status byte from the write.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.cc2420.interfaces.CC2420Register" qname="CC2420Register"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b09170e8b40"/></typename>
          </type-int>
          <function-parameters>
            <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x2b091611ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="63:/opt/tinyos-main-read-only/tos/chips/cc2420/interfaces/CC2420Register.nc" name="data" ref="0x2b091778ba78">
            <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x2b091611ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>