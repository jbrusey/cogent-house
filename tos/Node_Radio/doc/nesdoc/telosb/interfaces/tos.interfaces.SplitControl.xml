<?xml version="1.0" ?><interfacedef loc="87:/opt/tinyos-main-read-only/tos/interfaces/SplitControl.nc" nicename="tos.interfaces.SplitControl" qname="SplitControl">
      <documentation loc="72:/opt/tinyos-main-read-only/tos/interfaces/SplitControl.nc">
        <short>
 Please refer to TEP 115 for more information about this interface and its
 intended use.&lt;br&gt;&lt;br&gt;

 This is the split-phase counterpart to the StdContol interface.</short>
        <long>
 Please refer to TEP 115 for more information about this interface and its
 intended use.&lt;br&gt;&lt;br&gt;

 This is the split-phase counterpart to the StdContol interface.  It
 should be used for switching between the on and off power states of
 the component providing it.  For each &lt;code&gt;start()&lt;/code&gt; or
 &lt;code&gt;stop()&lt;/code&gt; command, if the command returns SUCCESS, then a
 corresponding  &lt;code&gt;startDone()&lt;/code&gt; or &lt;code&gt;stopDone()&lt;/code&gt; event
 must be signalled.

 @author Joe Polastre
 @author Kevin Klues (klueska@cs.wustl.edu)
</long>
      </documentation>
      <function event="" loc="113:/opt/tinyos-main-read-only/tos/interfaces/SplitControl.nc" name="startDone" provided="0" ref="0x2b09170e5290">
        <documentation loc="106:/opt/tinyos-main-read-only/tos/interfaces/SplitControl.nc">
          <short> 
 Notify caller that the component has been started and is ready to
 receive other commands.</short>
          <long> 
 Notify caller that the component has been started and is ready to
 receive other commands.

 @param &lt;b&gt;error&lt;/b&gt; -- SUCCESS if the component was successfully
                        turned on, FAIL otherwise
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.SplitControl" qname="SplitControl"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2b0916a571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="113:/opt/tinyos-main-read-only/tos/interfaces/SplitControl.nc" name="error" ref="0x2b09170e5020">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2b0916a571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="138:/opt/tinyos-main-read-only/tos/interfaces/SplitControl.nc" name="stopDone" provided="0" ref="0x2b09170e4690">
        <documentation loc="132:/opt/tinyos-main-read-only/tos/interfaces/SplitControl.nc">
          <short>
 Notify caller that the component has been stopped.</short>
          <long>
 Notify caller that the component has been stopped.

 @param &lt;b&gt;error&lt;/b&gt; -- SUCCESS if the component was successfully
                        turned off, FAIL otherwise
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.SplitControl" qname="SplitControl"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2b0916a571a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="138:/opt/tinyos-main-read-only/tos/interfaces/SplitControl.nc" name="error" ref="0x2b09170e4420">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2b0916a571a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="104:/opt/tinyos-main-read-only/tos/interfaces/SplitControl.nc" name="start" provided="0" ref="0x2b09170e6510">
        <documentation loc="89:/opt/tinyos-main-read-only/tos/interfaces/SplitControl.nc">
          <short>
 Start this component and all of its subcomponents.</short>
          <long>
 Start this component and all of its subcomponents.  Return
 values of SUCCESS will always result in a &lt;code&gt;startDone()&lt;/code&gt;
 event being signalled.

 @return SUCCESS if the device is already in the process of 
         starting or the device was off and the device is now ready to turn 
         on.  After receiving this return value, you should expect a 
         &lt;code&gt;startDone&lt;/code&gt; event in the near future.&lt;br&gt;
         EBUSY if the component is in the middle of powering down
               i.e. a &lt;code&gt;stop()&lt;/code&gt; command has been called,
               and a &lt;code&gt;stopDone()&lt;/code&gt; event is pending&lt;br&gt;
         EALREADY if the device is already on &lt;br&gt;
         FAIL Otherwise
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.SplitControl" qname="SplitControl"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2b0916a571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="130:/opt/tinyos-main-read-only/tos/interfaces/SplitControl.nc" name="stop" provided="0" ref="0x2b09170e5a78">
        <documentation loc="115:/opt/tinyos-main-read-only/tos/interfaces/SplitControl.nc">
          <short>
 Start this component and all of its subcomponents.</short>
          <long>
 Start this component and all of its subcomponents.  Return
 values of SUCCESS will always result in a &lt;code&gt;startDone()&lt;/code&gt;
 event being signalled.

 @return SUCCESS if the device is already in the process of 
         stopping or the device was on and the device is now ready to turn 
         off.  After receiving this return value, you should expect a 
         &lt;code&gt;stopDone&lt;/code&gt; event in the near future.&lt;br&gt;
         EBUSY if the component is in the middle of powering up
               i.e. a &lt;code&gt;start()&lt;/code&gt; command has been called,
               and a &lt;code&gt;startDone()&lt;/code&gt; event is pending&lt;br&gt;
         EALREADY if the device is already off &lt;br&gt;
         FAIL Otherwise
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.SplitControl" qname="SplitControl"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2b0916a571a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>