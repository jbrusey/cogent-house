<?xml version="1.0" ?><interfacedef loc="56:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" nicename="tos.lib.timer.Alarm" qname="Alarm">
      <documentation loc="36:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc">
        <short>
 An Alarm is a low-level interface intended for precise timing.</short>
        <long>
 An Alarm is a low-level interface intended for precise timing.

 &lt;p&gt;An Alarm is parameterised by its &quot;precision&quot; (milliseconds,
 microseconds, etc), identified by a type. This prevents, e.g.,
 unintentionally mixing components expecting milliseconds with those
 expecting microseconds as those interfaces have a different type.

 &lt;p&gt;An Alarm's second parameter is its &quot;width&quot;, i.e., the number of
 bits used to represent time values. Width is indicated by including
 the appropriate size integer type as an Alarm parameter.

 &lt;p&gt;See TEP102 for more details.

 @param precision_tag A type indicating the precision of this Alarm.
 @param size_type An integer type representing time values for this Alarm.

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
</long>
      </documentation>
      <parameters>
        <typedef loc="56:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" name="precision_tag" ref="0x2b091748a588">
          <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
          <type-var alignment="U:" size="U:"><typedef-ref name="precision_tag" ref="0x2b091748a588" scoped=""/></type-var>
        </typedef>
        <typedef loc="56:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" name="size_type" ref="0x2b091748a7b8">
          <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
          <type-var alignment="U:" size="U:"><typedef-ref name="size_type" ref="0x2b091748a7b8" scoped=""/></type-var>
        </typedef>
      </parameters>
      <function command="" loc="109:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" name="getNow" provided="0" ref="0x2b09174850d8">
        <documentation loc="105:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc">
          <short>
 Return the current time.</short>
          <long>
 Return the current time.
 @return Current time.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <type-function alignment="I:1" size="I:1">
          <type-var alignment="U:" size="U:"><typedef-ref name="size_type" ref="0x2b091748a7b8" scoped=""/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" loc="78:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" name="fired" provided="0" ref="0x2b0917488258">
        <documentation loc="75:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc">
          <short>
 Signaled when the alarm expires.</short>
          <long>
 Signaled when the alarm expires.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="103:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" name="startAt" provided="0" ref="0x2b0917487758">
        <documentation loc="90:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc">
          <short>
 Set a single-short alarm to time t0+dt.</short>
          <long>
 Set a single-short alarm to time t0+dt. Replaces any current alarm
 time. The &lt;code&gt;fired&lt;/code&gt; will be signaled when the alarm expires.
 Alarms set in the past will fire &quot;soon&quot;.
 
 &lt;p&gt;Because the current time may wrap around, it is possible to use
 values of t0 greater than the &lt;code&gt;getNow&lt;/code&gt;'s result. These
 values represent times in the past, i.e., the time at which getNow()
 would last of returned that value.

 @param t0 Base time for alarm.
 @param dt Alarm time as offset from t0.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-var alignment="U:" size="U:"><typedef-ref name="size_type" ref="0x2b091748a7b8" scoped=""/></type-var>
            <type-var alignment="U:" size="U:"><typedef-ref name="size_type" ref="0x2b091748a7b8" scoped=""/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="103:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" name="t0" ref="0x2b09174871b8">
            <type-var alignment="U:" size="U:"><typedef-ref name="size_type" ref="0x2b091748a7b8" scoped=""/></type-var>
          </variable>
          <variable loc="103:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" name="dt" ref="0x2b09174874d8">
            <type-var alignment="U:" size="U:"><typedef-ref name="size_type" ref="0x2b091748a7b8" scoped=""/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" loc="88:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" name="isRunning" provided="0" ref="0x2b09174889c8">
        <documentation loc="81:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc">
          <short>
 Check if alarm is running.</short>
          <long>
 Check if alarm is running. Note that a FALSE return does not indicate
 that the &lt;code&gt;fired&lt;/code&gt; event will not be signaled (it may have
 already started executing, but not reached your code yet).

 @return TRUE if the alarm is still running.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="bool" ref="0x2b0916a4ac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="116:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" name="getAlarm" provided="0" ref="0x2b0917485858">
        <documentation loc="111:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc">
          <short>
 Return the time the currently running alarm will fire or the time that
 the previously running alarm was set to fire.</short>
          <long>
 Return the time the currently running alarm will fire or the time that
 the previously running alarm was set to fire.
 @return Alarm time.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <type-function alignment="I:1" size="I:1">
          <type-var alignment="U:" size="U:"><typedef-ref name="size_type" ref="0x2b091748a7b8" scoped=""/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="66:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" name="start" provided="0" ref="0x2b09174892d0">
        <documentation loc="59:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc">
          <short>
 Set a single-short alarm to some time units in the future.</short>
          <long>
 Set a single-short alarm to some time units in the future. Replaces
 any current alarm time. Equivalent to start(getNow(), dt). The
 &lt;code&gt;fired&lt;/code&gt; will be signaled when the alarm expires.

 @param dt Time until the alarm fires.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-var alignment="U:" size="U:"><typedef-ref name="size_type" ref="0x2b091748a7b8" scoped=""/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="66:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" name="dt" ref="0x2b0917489060">
            <type-var alignment="U:" size="U:"><typedef-ref name="size_type" ref="0x2b091748a7b8" scoped=""/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" loc="73:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc" name="stop" provided="0" ref="0x2b0917489aa0">
        <documentation loc="68:/opt/tinyos-main-read-only/tos/lib/timer/Alarm.nc">
          <short>
 Cancel an alarm.</short>
          <long>
 Cancel an alarm. Note that the &lt;code&gt;fired&lt;/code&gt; event may have
 already been signaled (even if your code has not yet started
 executing).
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>