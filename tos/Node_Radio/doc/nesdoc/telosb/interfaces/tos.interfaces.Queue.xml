<?xml version="1.0" ?><interfacedef loc="43:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc" nicename="tos.interfaces.Queue" qname="Queue">
      <documentation loc="33:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc">
        <short>
  Interface to a FIFO list (queue) that contains items
  of a specific type.</short>
        <long>
  Interface to a FIFO list (queue) that contains items
  of a specific type. The queue has a maximum size.

  @author Philip Levis
  @author Kyle Jamieson
  @date   $Date: 2008-06-04 03:00:31 $
</long>
      </documentation>
      <parameters>
        <typedef loc="43:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc" name="t" ref="0x2b091837a7e8">
          <interfacedef-ref nicename="tos.interfaces.Queue" qname="Queue"/>
          <type-var alignment="U:" size="U:"><typedef-ref name="t" ref="0x2b091837a7e8" scoped=""/></type-var>
        </typedef>
      </parameters>
      <function command="" loc="73:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc" name="head" provided="0" ref="0x2b09183e5728">
        <documentation loc="67:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc">
          <short>
 Get the head of the queue without removing it.</short>
          <long>
 Get the head of the queue without removing it. If the queue
 is empty, the return value is undefined.

 @return 't ONE' The head of the queue.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Queue" qname="Queue"/>
        <type-function alignment="I:1" size="I:1">
          <type-var alignment="U:" size="U:"><typedef-ref name="t" ref="0x2b091837a7e8" scoped=""/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="90:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc" name="enqueue" provided="0" ref="0x2b09183e2020">
        <documentation loc="83:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc">
          <short>
 Enqueue an element to the tail of the queue.</short>
          <long>
 Enqueue an element to the tail of the queue.

 @param 't ONE newVal' - the element to enqueue
 @return SUCCESS if the element was enqueued successfully, FAIL
                 if it was not enqueued.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Queue" qname="Queue"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2b0916a571a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var alignment="U:" size="U:"><typedef-ref name="t" ref="0x2b091837a7e8" scoped=""/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="90:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc" name="newVal" ref="0x2b09183e4d78">
            <type-var alignment="U:" size="U:"><typedef-ref name="t" ref="0x2b091837a7e8" scoped=""/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2b0916115508"/>
              <value-structured>
                <type-tag alignment="I:2" size="I:2"><attribute-ref name="one" ref="0x2b0916115508"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" loc="101:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc" name="element" provided="0" ref="0x2b09183e1020">
        <documentation loc="92:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc">
          <short>
 Return the nth element of the queue without dequeueing it, 
 where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>
 Return the nth element of the queue without dequeueing it, 
 where 0 is the head of the queue and (size - 1) is the tail. 
 If the element requested is larger than the current queue size,
 the return value is undefined.

 @param index - the index of the element to return
 @return 't ONE' the requested element in the queue.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Queue" qname="Queue"/>
        <type-function alignment="I:1" size="I:1">
          <type-var alignment="U:" size="U:"><typedef-ref name="t" ref="0x2b091837a7e8" scoped=""/></type-var>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b091611a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="101:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc" name="idx" ref="0x2b09183e2c50">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b091611a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="65:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc" name="maxSize" provided="0" ref="0x2b09183e5020">
        <documentation loc="60:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc">
          <short>
 The maximum number of elements the queue can hold.</short>
          <long>
 The maximum number of elements the queue can hold.

 @return The maximum queue size.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Queue" qname="Queue"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="uint8_t" ref="0x2b091611a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="81:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc" name="dequeue" provided="0" ref="0x2b09183e4290">
        <documentation loc="75:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc">
          <short>
 Remove the head of the queue.</short>
          <long>
 Remove the head of the queue. If the queue is empty, the return
 value is undefined.

 @return 't ONE' The head of the queue.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Queue" qname="Queue"/>
        <type-function alignment="I:1" size="I:1">
          <type-var alignment="U:" size="U:"><typedef-ref name="t" ref="0x2b091837a7e8" scoped=""/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="50:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc" name="empty" provided="0" ref="0x2b09183e6070">
        <documentation loc="45:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc">
          <short>
 Returns if the queue is empty.</short>
          <long>
 Returns if the queue is empty.

 @return Whether the queue is empty.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Queue" qname="Queue"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="bool" ref="0x2b0916a4ac10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" loc="58:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc" name="size" provided="0" ref="0x2b09183e6790">
        <documentation loc="52:/opt/tinyos-main-read-only/tos/interfaces/Queue.nc">
          <short>
 The number of elements currently in the queue.</short>
          <long>
 The number of elements currently in the queue.
 Always less than or equal to maxSize().

 @return The number of elements in the queue.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.interfaces.Queue" qname="Queue"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="uint8_t" ref="0x2b091611a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>