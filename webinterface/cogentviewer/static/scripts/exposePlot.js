// Generated by CoffeeScript 1.3.3

require(["dojo/topic", "dojo/io/script", "dojo/store/Memory", "dojo/ready", "dojo/request", "dojo/dom", "dojo/dom-construct"], function(topic, ioscript, Memory, Ready, Request, dom, domConstruct) {
  var data, fetchData, plotExposure, typeStore;
  topic.subscribe("navTree", function(arg1) {
    fetchData(arg1);
  });
  data = [
    {
      id: 1,
      name: "Temperature"
    }, {
      id: 2,
      name: "Humidity"
    }, {
      id: 3,
      name: "Co2"
    }
  ];
  typeStore = new Memory({
    data: data
  });
  Ready(function(obj) {
    var dropdown;
    dropdown = dijit.byId("sensorType");
    console.log("Drop ", dropdown);
    dropdown.set("store", typeStore);
  });
  fetchData = function(args) {
    var item, sensorTypes, _i, _len, _results;
    console.log("Fecthing Data with Args ", args);
    args.graphType = "expose";
    sensorTypes = [];
    if (args.sensorType === "") {
      console.log("--> SENSOR TYPE NOT SPECIFIED");
      sensorTypes = ["1", "2"];
    } else {
      sensorTypes = [args.sensorType];
    }
    console.log("SENSOR TYPES ", sensorTypes);
    domConstruct.destroy("theGraph");
    domConstruct.empty("graphs");
    domConstruct.create("div", {
      id: "theGraph"
    }, "graphs");
    _results = [];
    for (_i = 0, _len = sensorTypes.length; _i < _len; _i++) {
      item = sensorTypes[_i];
      console.log(item);
      args.sensorType = item;
      _results.push(ioscript.get({
        url: "jsonFetch",
        content: args,
        callbackParamName: "callback"
      }).then(function(data) {
        var newDom;
        console.log("Data Returned ", data);
        newDom = domConstruct.create("div", {
          id: "graph" + item
        }, "theGraph", "after");
        console.log(newDom);
        plotExposure(data, newDom.id);
        console.log("Plotted");
      }));
    }
    return _results;
  };
  plotExposure = function(theData, domItem) {
    var chart, options;
    console.log("Building Time Series ", theData);
    console.log("Title", theData.title);
    options = {
      chart: {
        renderTo: domItem,
        defaultSeriesType: "column"
      },
      title: {
        text: "EXPOSE CHART"
      },
      credits: {
        enabled: false
      },
      exporting: {
        width: 1024
      },
      xAxis: {
        categories: ["Default"]
      },
      yAxis: {
        title: {
          text: "Percentage of Samples"
        }
      },
      plotOptions: {
        column: {
          stacking: "percent"
        }
      },
      series: []
    };
    options.xAxis.categories = theData.headers;
    options.series = theData.series;
    options.title.text = theData.title;
    chart = new Highcharts.Chart(options);
    console.log("----> DONE", options);
  };
});
