// Generated by CoffeeScript 1.7.1
var height, maxcount, maxdepth, maxlinks, mincount, minlinks, orignodes, scrollborder, scrollheight, scrollwidth, width;

width = 1024;

height = 256;

scrollwidth = 1024;

scrollheight = 128;

scrollborder = 25;

orignodes = null;

maxdepth = 0;

maxcount = 0;

mincount = 0;

maxlinks = 0;

minlinks = 0;

d3.json("http://127.0.0.1:6543/rest/topology/", function(json) {
  var enddate, startdate, theaxis, thescale, timeitems, timesvg, topology;
  console.log("All Data", json);
  topology = json.topolo;
  console.log("Toplolgy is ", topology);
  console.log("Drawing Timeline");
  timesvg = d3.select("#timeline").append("svg").attr("width", scrollwidth * 2).attr("height", scrollheight);
  timesvg.append("svg:rect").attr("x", 0).attr("y", 0).attr("scrollwidth", scrollwidth).attr("scrollheight", scrollheight).attr("fill", '#fff').attr("stroke", '#000');
  startdate = new Date(json.startdate);
  enddate = new Date(json.enddate);
  console.log("Start ", startdate, " End", enddate);
  thescale = d3.time.scale().domain([startdate, enddate]).range([0, (scrollwidth - scrollborder) * 2]);
  theaxis = d3.svg.axis().scale(thescale).orient("bottom");
  timesvg.append("g").attr("transform", "translate(" + scrollborder + "," + (scrollheight - 25) + ")").call(theaxis);
  timeitems = timesvg.selectAll(".timeitem").data(d3.values(topology)).enter().append("g").attr("transform", function(d) {
    return "translate(" + thescale(new Date(d.date)) + "," + (scrollheight - 25 - 10) + ")";
  });
  timeitems.append("circle").attr("r", 10).attr("fill", '#AAA').attr("stroke", '#000');
  return timeitems.append("svg:text").text(function(d) {
    return d.id;
  });
});
