// Generated by CoffeeScript 1.3.3

require(["dojo/store/JsonRest", "dojox/charting/Chart2D", "dojox/charting/DataChart", "dojox/charting/themes/MiamiNice", "dojox/charting/StoreSeries", "dojox/charting/DataSeries", "dojo/store/Memory", "dijit/form/FilteringSelect", "dijit/form/Button", "dojo/on", "dojo/ready"], function(JsonRest, Chart, DataChart, theme, StoreSeries, DataSeries, Memory, Select, Button, On, ready) {
  var chartStore, nodeStore, processClick, renderGraph;
  nodeStore = JsonRest({
    target: "../rest/node/"
  });
  ready(function() {
    var nodeSelect, theButton;
    console.log("Ready Function Called");
    nodeSelect = new Select({
      id: "theNode",
      value: "",
      store: nodeStore,
      required: true,
      query: {},
      searchAttr: "id"
    }, "theNode");
    nodeSelect.startup();
    theButton = new Button({
      id: "theButton",
      label: "Show Data",
      onClick: function() {
        return processClick();
      }
    }, "theButton");
  });
  processClick = function() {
    var theItem;
    console.log("Processsing Click");
    theItem = dijit.byId("theNode").get("value");
    if (theItem) {
      console.log("Selected Item is ", theItem);
      return renderGraph(theItem);
    }
  };
  chartStore = JsonRest({
    id: "chartStore",
    target: "../restTest/",
    identifier: "date"
  });
  renderGraph = function(theId) {
    if (!theId) {
      return;
    }
    chartStore.query({
      "id": theId
    }).then(function(data) {
      var dataItem, highChart, item, newData, theDate, _i, _len;
      newData = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        theDate = item.x;
        dataItem = [item.x * 1000, item.value];
        newData.push(dataItem);
      }
      return highChart = new Highcharts.StockChart({
        chart: {
          renderTo: "highChart",
          type: "column"
        },
        title: {
          text: "Node " + theId + " Data"
        },
        xAxis: {
          type: "datetime"
        },
        series: [
          {
            name: "Foo",
            data: newData
          }
        ]
      });
    });
  };
});
